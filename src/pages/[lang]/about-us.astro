---
// astro file
import '/src/styles/color.css';
import '/src/styles/global.css';
// ...existing code...
import PageLayout from '../../layouts/PageLayout.astro';
import aboutUsData from '../../../src/content/about-us.json' assert { type: 'json' };

export const prerender = true;

export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'vi' } },
    { params: { lang: 'ja' } }
  ];
}
const lang = Astro.params.lang;

// Tạo tocLabels động từ JSON
const tocLabels = aboutUsData.sections.reduce((acc: Record<string, string>, section: any) => {
  acc[section.id] = section.title[lang as keyof typeof section.title] || section.title.en;
  return acc;
}, {});
---

<PageLayout title="About Us">
<div class="w-full bg-surface flex justify-center">
<div class="w-full max-w-7xl bg-surface flex gap-6 items-start px-6 py-8">


        <!-- Sidebar Trái -->
        <aside class="w-64 bg-surface rounded-lg shadow p-4 mt-4 lg:mt-0 lg:sticky lg:top-32 z-20 border border-border">
          <h2 class="font-bold text-lg mb-2 text-on-surface">{lang === 'vi' ? 'Mục lục' : lang === 'ja' ? '目次' : 'Table of Contents'}</h2>
          <ul class="border border-border rounded-lg overflow-hidden">
            {aboutUsData.sections.map((section: any, index: number) => (
              <li>
                <a 
                  href={`/${lang}/about-us/${section.id}`} 
                  class={`block bg-surface rounded-none ${index < aboutUsData.sections.length - 1 ? 'border-b border-border' : ''} px-3 py-2 text-on-surface font-normal hover:text-primary`}
                >
                  {section.title[lang as keyof typeof section.title] || section.title.en}
                </a>
              </li>
            ))}
          </ul>
        </aside>

        <!-- Nội dung chính -->
        <main class="flex-1 space-y-12">
          {aboutUsData.sections.map((section: any) => (
            <section class="bg-surface rounded-lg p-6 border border-border">
              <a href={`/${lang}/about-us/${section.id}`} class="block group">
                <h1 class="text-3xl font-bold mb-4 text-on-surface group-hover:text-primary transition-colors cursor-pointer">{section.title[lang as keyof typeof section.title] || section.title.en}</h1>
              </a>
              <div class="prose prose-lg max-w-none text-on-surface mb-6">
                {(() => {
                  const content = section.content[lang as keyof typeof section.content] || section.content.en;
                  // Hiển thị tóm tắt (khoảng 150 từ đầu tiên)
                  const words = content.split(' ');
                  const summary = words.slice(0, 30).join(' ') + (words.length > 30 ? '...' : '');
                  return <p set:html={summary}></p>;
                })()}
              </div>
              <a
                href={`/${lang}/about-us/${section.id}`}
                class="inline-flex items-center justify-center px-6 py-3 rounded-lg font-bold text-base shadow transition-colors focus:outline-none focus-visible:ring-2 bg-primary text-on-primary hover:bg-primary/90"
              >
                {lang === 'vi' ? 'Chi tiết' : lang === 'ja' ? '詳細' : 'Details'}
              </a>
            </section>
          ))}
        </main>
</script>
<script>
// Simple dark mode toggle (auto detect or manual)
function setTheme(theme: string) {
  document.documentElement.setAttribute('data-theme', theme);
}
// Auto detect system preference
if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
  setTheme('dark');
} else {
  setTheme('light');
}
// Optional: expose to window for manual toggle
// @ts-ignore
window.setTheme = setTheme;
</script>
<script>
// Smooth scroll for sidebar links
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.scroll-link').forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      const currentTarget = e.currentTarget as HTMLElement;
      const href = currentTarget && currentTarget.getAttribute('href') || '';
      const target = document.querySelector(href);
      if (target) {
        // Offset increased to 80px so section title is always visible
        window.scrollTo({
          top: target.getBoundingClientRect().top + window.scrollY - 80,
          behavior: 'smooth'
        });
      }
    });
  });
});
</script>

        <!-- Sidebar Phải: Contact Form -->
        <aside class="hidden lg:block w-[220px] bg-surface-1 rounded-lg p-4 text-on-surface shadow mt-4 lg:mt-0 lg:sticky lg:top-32 z-20 border border-border">
          <form class="space-y-4">
            <h2 class="font-bold text-lg mb-2 text-on-surface">Contact Us</h2>
            <div>
              <label class="block text-sm font-medium mb-1" for="name">Name</label>
              <input class="w-full rounded border border-border p-2 text-on-surface bg-surface-1" type="text" id="name" name="name" required />
            </div>
            <div>
              <label class="block text-sm font-medium mb-1" for="email">Email</label>
              <input class="w-full rounded border border-border p-2 text-on-surface bg-surface-1" type="email" id="email" name="email" required />
            </div>
            <div>
              <label class="block text-sm font-medium mb-1" for="message">Message</label>
              <textarea class="w-full rounded border border-border p-2 text-on-surface bg-surface-1" id="message" name="message" rows="4" required></textarea>
            </div>
            <button type="submit" class="w-full bg-primary text-on-primary rounded-lg p-3 font-semibold shadow-none hover:opacity-90 transition">Send</button>
          </form>
        </aside>

  </div>
</PageLayout>