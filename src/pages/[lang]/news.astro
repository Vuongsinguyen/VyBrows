---
import '/src/styles/global.css';
import NewsLayout from '../../layouts/NewsLayout.astro';
import NewsListComp from '../../components/UI/layout/NewsListComp.astro';
import BannerFix from '../../components/UI/section/BannerFix.astro';
import { getAllNews } from '../../data/newsLoader.js';

export const prerender = true;

export async function getStaticPaths() {
  return [
    { params: { lang: 'vi' } },
    { params: { lang: 'ja' } }
  ];
}

const lang = Astro.params.lang;
const PAGE_SIZE = 25;
const pageParam = Astro.url?.searchParams.get('page');
const currentPage = pageParam ? parseInt(pageParam) : 1;

// Get news from JSON data
const allNews = getAllNews();
const news = allNews.map((item) => {
  const translation = item.translations[lang as keyof typeof item.translations] || item.translations.en; // Fallback to English
  return {
    id: item.id,
    title: translation.title,
    description: translation.shortDescription,
    image: item.mainImage,
    date: item.createdDate,
    category: 'PMU News', // Default category
    link: `/${lang}/news/${item.slug || item.id}`,
  };
})
// Sort by date descending (newest first)
.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

const totalNews = news.length;
const totalPages = Math.ceil(totalNews / PAGE_SIZE);
const pagedNews = news.slice((currentPage - 1) * PAGE_SIZE, currentPage * PAGE_SIZE);
---

<NewsLayout title="News & Updates">
  <BannerFix 
    title="News & Updates" 
    subtitle="Stay updated with the latest news, trends, and insights from VyBrows Academy"
    showBreadcrumb={true}
    breadcrumbItems={[{ href: `/${lang}/news`, label: 'News' }]}
  />
  <div class="bg-gray-100">
    <div class="max-w-7xl mx-auto px-6 py-3">
      <nav class="flex items-center text-sm text-gray-600">
        <a href={`/${lang}`} class="hover:text-primary transition-colors">Home</a>
        <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
        <span class="text-gray-900 font-medium">News</span>
      </nav>
    </div>
  </div>

  <!-- Main Content -->
  <section class="py-16 px-6 min-h-screen" style="background: var(--color-bg);">
    <div class="max-w-7xl mx-auto">

      <!-- News Content -->
      <div id="newsContainer">
        <NewsListComp news={pagedNews} viewMode="grid" />
      </div>

      <!-- Pagination -->
      {totalPages > 1 && (
        <div class="flex justify-center items-center mt-12 gap-2">
          <!-- Previous Button -->
          {currentPage > 1 && (
            <a 
              href={`/${lang}/news?page=${currentPage - 1}`}
              class="flex items-center gap-1 px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors text-sm font-medium"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
              </svg>
              Previous
            </a>
          )}

          <!-- Simple pagination for multi-language -->
          {Array.from({ length: totalPages }, (_, i) => i + 1).map(pageNum => (
            <a 
              href={`/${lang}/news?page=${pageNum}`}
              class={pageNum === currentPage 
                ? 'px-4 py-2 rounded-lg text-sm font-medium transition-colors bg-primary text-white' 
                : 'px-4 py-2 rounded-lg text-sm font-medium transition-colors bg-white border border-gray-300 hover:bg-gray-50 text-gray-700'
              }
            >{pageNum}</a>
          ))}

          <!-- Next Button -->
          {currentPage < totalPages && (
            <a 
              href={`/${lang}/news?page=${currentPage + 1}`}
              class="flex items-center gap-1 px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors text-sm font-medium"
            >
              Next
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </a>
          )}
        </div>
      )}
    </div>
  </section>
</NewsLayout>