---
import '/src/styles/color.css';
import '/src/styles/global.css';
import PageLayout from '../../../layouts/PageLayout.astro';
import servicesData from '../../../content/services.json' assert { type: 'json' };

export const prerender = true;

export async function getStaticPaths() {
  const langs = ['vi', 'ja', 'es'];
  return langs.flatMap(lang => {
    return servicesData.map(service => ({ 
      params: { 
        lang: lang, 
        service: service.slug 
      } 
    }));
  });
}
const lang = Astro.params.lang as 'vi' | 'ja' | 'es';
const serviceSlug = Astro.params.service as string;

// Tạo tocLabels động từ JSON
const tocLabels = servicesData.reduce((acc, service) => {
  acc[service.slug] = service.title[lang] || service.title.en;
  return acc;
}, {} as Record<string, string>);

// Tạo serviceContent động từ JSON
const serviceContent = servicesData.reduce((acc, service) => {
  acc[service.slug] = service.description;
  return acc;
}, {} as Record<string, Record<string, string>>);
---

<PageLayout title={tocLabels[serviceSlug] || 'Service'}>
  <div class="w-full bg-surface flex justify-center">
    <div class="w-full max-w-7xl bg-surface flex gap-6 items-start px-6 py-8">
      <!-- Sidebar Trái -->
      <aside class="w-64 bg-surface rounded-lg shadow p-4 mt-4 lg:mt-0 lg:sticky lg:top-32 z-20 border border-border">
        <h2 class="font-bold text-lg mb-2 text-on-surface">{lang === 'vi' ? 'Danh mục dịch vụ' : lang === 'ja' ? 'サービス一覧' : 'Services Menu'}</h2>
        <ul class="border border-border rounded-lg overflow-hidden">
          {servicesData.map((service, index) => (
            <li>
              <a href={`/${lang}/service/${service.slug}`} class={`block bg-surface rounded-none ${index < servicesData.length - 1 ? 'border-b border-border' : ''} px-3 py-2 text-on-surface font-normal hover:text-primary`}>
                {service.title[lang] || service.title.en}
              </a>
            </li>
          ))}
        </ul>
      </aside>
      <!-- Nội dung chính -->
      <main class="flex-1 space-y-12">
        <h1 class="text-3xl font-bold mb-4 text-on-surface">{tocLabels[serviceSlug] ?? serviceSlug}</h1>
        {servicesData.find(s => s.slug === serviceSlug)?.image && (
          <img 
            src={servicesData.find(s => s.slug === serviceSlug)?.image} 
            alt={tocLabels[serviceSlug] ?? serviceSlug}
            class="w-full max-w-md h-64 object-cover rounded-lg shadow-lg mb-6"
          />
        )}
        <p class="text-base mt-2 max-w-2xl text-on-surface">
          {serviceContent[serviceSlug]?.[lang] ?? '[Service content not available]'}
        </p>
        {servicesData.find(s => s.slug === serviceSlug)?.technologies && (
          <div class="mt-6">
            <h3 class="text-lg font-semibold mb-3 text-on-surface">
              {lang === 'vi' ? 'Công nghệ sử dụng' : lang === 'ja' ? '使用技術' : lang === 'es' ? 'Tecnologías utilizadas' : 'Technologies Used'}
            </h3>
            <div class="flex flex-wrap gap-2">
              {servicesData.find(s => s.slug === serviceSlug)?.technologies.map((tech, index) => (
                <span class="bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium border border-primary/20">
                  {tech}
                </span>
              ))}
            </div>
          </div>
        )}
      </main>
    </div>
  </div>
</PageLayout>
