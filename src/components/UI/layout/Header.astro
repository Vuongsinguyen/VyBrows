---
// Header.astro - Combined TopBar and Navbar
import Navbar from './Navbar.astro';

export interface Props { class?: string; }
const { class: customClass = '' } = Astro.props;

// Language mapping + detect current language
const langMap = { vi: 'Tiếng Việt', en: 'English', es: 'Español', ja: '日本語', ko: '한국어' };
const currentLang = Astro.url.pathname.match(/^\/(vi|en|es|ja|ko)(\/|$)/)?.[1] || 'en';
const currentLangDisplay = langMap[currentLang] || langMap.en;
---
<header
  id="header-container"
  class={`fixed top-0 left-0 right-0 z-[1000] ${customClass} border-b`}
  style="border-color: #003324;"
>
  <!-- Topbar + Navbar như bạn có sẵn -->
  <div id="topbar" class="text-white w-full" style="background: var(--color-primary-gradient);">
    <div class="max-w-[1280px] mx-auto flex justify-between items-center px-6 py-0 text-sm font-medium" style="height: 32px;">
      <!-- Contact Info -->
      <div class="flex items-center space-x-6">
        <a href="mailto:contact@vybrows-academy.com" class="items-center gap-1 hidden md:flex" style="color: var(--color-text); text-decoration: none;">
          <span class="material-icons-outlined text-base" style="font-size: 20px; color: var(--color-text);">mail</span>
          contact@vybrows-academy.com
        </a>
        <a href="tel:3464099999" class="items-center gap-1 hidden md:flex" style="color: var(--color-text); text-decoration: none;">
          <span class="material-icons-outlined text-base" style="font-size: 20px; color: var(--color-text);">call</span>
          VN: 346-409-9999
        </a>
        <a href="tel:+81333401053" class="items-center gap-1 hidden md:flex" style="color: var(--color-text); text-decoration: none;">
          <span class="material-icons-outlined text-base" style="font-size: 20px; color: var(--color-text);">call</span>
          JP: (+81) 3 3340-1053
        </a>
        <!-- Mobile: only icons -->
        <a href={`/${currentLang}/contact`} class="md:hidden flex items-center" aria-label="Gửi email">
          <span class="material-icons-outlined text-white text-base" style="font-size: 20px;">mail</span>
        </a>
        <a href="tel:+832838424483" class="md:hidden flex items-center" aria-label="Gọi điện thoại">
          <span class="material-icons-outlined text-white text-base" style="font-size: 20px;">call</span>
        </a>
      </div>

      <!-- Right controls -->
      <div class="flex items-center gap-4">
        <a href="/dr-anmytas" class="hover:underline text-sm font-medium" style="color: var(--color-text);">Dr.ANMYTAS</a>
        <a href="/supply-list" class="hover:underline text-sm font-medium" style="color: var(--color-text);">SUPPLY LIST</a>
        <a href="/blog" class="hover:underline text-sm font-medium" style="color: var(--color-text);">BLOG</a>

        <!-- Language Dropdown -->
        <div class="relative" role="menu" aria-label="Language Switcher">
          <button id="lang-dropdown-btn" class="flex items-center gap-1" type="button" aria-haspopup="true" aria-expanded="false" style="color: var(--color-text);">
            {currentLangDisplay}
            <svg class="w-4 h-4" fill="var(--color-text)" viewBox="0 0 24 24"><path d="M7 9.5L12 14.5L17 9.5H7Z"/></svg>
          </button>
          <div id="lang-dropdown-menu" class="absolute right-0 top-full pt-2 hidden z-[99999]">
            <div class="rounded-md shadow-lg border border-gray-200 min-w-[140px]" style="background: var(--color-black2white);">
              <button class="lang-switch block px-4 py-2 bg-[#003324] text-white first:rounded-t-md" data-lang="vi">Tiếng Việt</button>
              <button class="lang-switch block px-4 py-2 bg-[#003324] text-white" data-lang="en">English</button>
              <button class="lang-switch block px-4 py-2 bg-[#003324] text-white" data-lang="ja">日本語</button>
              <button class="lang-switch block px-4 py-2 bg-[#003324] text-white" data-lang="es">Español</button>
              <button class="lang-switch block px-4 py-2 bg-[#003324] text-white last:rounded-b-md" data-lang="ko">한국어</button>
            </div>
          </div>
        </div>

        <!-- Dark Mode Toggle -->
        <button id="toggle-dark" class="flex items-center gap-2 px-3 py-1 rounded hover:bg-white/10 dark:hover:bg-gray-800/30 transition-all" aria-label="Toggle dark mode">
          <svg id="sun-icon" class="w-5 h-5" fill="var(--color-white2white)" viewBox="0 0 24 24">
            <path d="M12 7a5 5 0 100 10 5 5 0 000-10zM2 13h2a1 1 0 100-2H2a1 1 0 100 2zm18 0h2a1 1 0 100-2h-2a1 1 0 100 2zM11 2v2a1 1 0 102 0V2a1 1 0 10-2 0zm0 18v2a1 1 0 102 0v-2a1 1 0 10-2 0zM5.99 4.58a1 1 0 00-1.41 1.41L5.64 7.05a1 1 0 101.41-1.41L5.99 4.58zm12.37 12.37a1 1 0 00-1.41 1.41l1.06 1.06a1 1 0 001.41-1.41l-1.06-1.06zM19.42 6.01a1 1 0 00-1.41-1.41l-1.06 1.06a1 1 0 101.41 1.41l1.06-1.06zM7.05 18.36a1 1 0 00-1.41 1.41l1.06 1.06a1 1 0 001.41-1.41l-1.06-1.06z"/>
          </svg>
          <svg id="moon-icon" class="w-5 h-5 hidden" viewBox="0 0 24 24" fill="none">
            <path d="M14.5 2C16.32 2 18.03 2.5 19.5 3.35C16.51 5.08 14.5 8.3 14.5 12C14.5 15.7 16.51 18.92 19.5 20.65C18.03 21.5 16.32 22 14.5 22C8.98 22 4.5 17.52 4.5 12C4.5 6.48 8.98 2 14.5 2Z" fill="var(--color-black2white)"/>
          </svg>
        </button>
      </div>
    </div>
  </div>
  <Navbar />
</header>

<style>
  #header-container {
    transform: translateY(0);
    transition: transform 0.3s ease;
    will-change: transform;
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 1000 !important;
  }
  /* Scroll xuống: ẩn header */
  #header-container.header-hidden {
    transform: translateY(-100%);
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('header-container');
    
    if (!header) {
      console.error('Header container not found');
      return;
    }
    
    let lastScrollY = window.scrollY;
    let ticking = false;

    function onScroll() {
      const currentY = window.scrollY;
      
      // Debug log
      console.log('Scroll position:', currentY, 'Last:', lastScrollY);
      
      if (currentY === 0) {
        // Luôn hiện header khi ở đầu trang
        header.classList.remove('header-hidden');
        console.log('At top - showing header');
      } else if (currentY > lastScrollY && currentY > 100) {
        // Scroll xuống: ẩn header (tăng threshold lên 100px)
        header.classList.add('header-hidden');
        console.log('Scrolling down - hiding header');
      } else if (currentY < lastScrollY) {
        // Scroll lên: hiện header
        header.classList.remove('header-hidden');
        console.log('Scrolling up - showing header');
      }
      
      lastScrollY = currentY;
      ticking = false;
    }

    window.addEventListener('scroll', () => {
      if (!ticking) {
        window.requestAnimationFrame(onScroll);
        ticking = true;
      }
    }, { passive: true });

    // Reset header khi resize (tránh lỗi khi thay đổi layout)
    window.addEventListener('resize', () => {
      header.classList.remove('header-hidden');
      console.log('Window resized - showing header');
    });
    
    // Kiểm tra header có tồn tại
    console.log('Header script loaded, element:', header);
  });
</script>
