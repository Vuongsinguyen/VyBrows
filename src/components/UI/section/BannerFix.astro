---
export interface Props {
  title?: string;
}
import { menus } from '../../../content/menu.ts';
import type { MenuItem } from '../../../content/menu.ts';
import Breadcrumb from '../layout/breadcrumb.astro';
const { title } = Astro.props;

// Detect current language from URL
const path = Astro.url.pathname.split('/').filter(Boolean);
const currentLang = path[0] || 'en';
const menuItems: MenuItem[] = menus[currentLang] || menus['en'];

// Helper to find label by href in menu tree (one level)
function findLabelByHref(href: string, items: MenuItem[]): MenuItem | null {
  for (const item of items) {
    if (item.href.replace(/\/$/, '') === href.replace(/\/$/, '')) return item;
  }
  return null;
}

// Lấy heading từ menu cha (cấp 1 hoặc 2)
let heading = 'About Us';
let accPath = [];
let items = menuItems;
for (let i = 0; i < path.length; i++) {
  accPath.push(path[i]);
  const href = '/' + accPath.join('/');
  const found = findLabelByHref(href, items);
  if (found) {
    heading = found.label;
    if (found.children) items = found.children;
  } else {
    break;
  }
}

// Handle service pages - now supporting multi-language routes /{lang}/service/{slug}
if (path.length > 1 && path[1] === 'service') {
  heading = 'Our Services';
}
// Also handle legacy service pages /service/{slug} (if any still exist)
if (path.length > 0 && path[0] === 'service') {
  heading = 'Our Services';
}

// Handle training pages - supporting multi-language routes /{lang}/training
if (path.length > 1 && path[1] === 'training') {
  const trainingLabels: Record<string, string> = {
    en: 'Professional Training',
    vi: 'Đào Tạo Chuyên Nghiệp',
    ja: 'プロフェッショナルトレーニング',
    es: 'Formación Profesional',
    ko: '전문 교육'
  };
  heading = trainingLabels[currentLang] || trainingLabels['en'];
}
// Also handle legacy training pages /training (if any still exist)
if (path.length > 0 && path[0] === 'training') {
  heading = 'Professional Training';
}
---

<section class="relative bg-gradient-to-b from-[var(--color-primary-dark)] to-black pb-12 pt-40 md:pt-60">
  <div class="max-w-[1280px] mx-auto px-4 relative z-10 flex flex-col items-center text-left pt-16">
    <!-- Dynamic Heading from menu.ts -->
    <h1 class="text-4xl md:text-5xl font-bold mb-8 text-white text-center" style="font-family: 'Playfair Display', serif;">{heading}</h1>
  </div>
  <!-- SVG Wave -->
  <div class="absolute inset-0 w-full h-full pointer-events-none select-none">
    <svg class="absolute bottom-0 left-0 w-full h-40" viewBox="0 0 1440 320" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fill="var(--color-primary-dark)" fill-opacity="1" d="M0,288L80,272C160,256,320,224,480,197.3C640,171,800,149,960,154.7C1120,160,1280,192,1360,208L1440,224L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z"/>
    </svg>
  </div>
</section>
