---
export interface Props {
  title?: string;
  subtitle?: string;
  showBreadcrumb?: boolean;
  breadcrumbItems?: Array<{ href: string; label: string }>;
}
import { menus } from '../../../content/menu.ts';
import type { MenuItem } from '../../../content/menu.ts';
const { title, subtitle, showBreadcrumb = false, breadcrumbItems = [] } = Astro.props;

// Detect current language from URL
const path = Astro.url.pathname.split('/').filter(Boolean);
const currentLang = path[0] || 'en';
---

<section class="relative bg-gradient-to-b from-[var(--color-primary-dark)] to-black pb-12 pt-40 md:pt-60 overflow-hidden">
  <!-- Gradient Overlay Layer -->
  <div class="banner-gradient-overlay absolute inset-0 w-full h-full pointer-events-none select-none"></div>
  
  <!-- Background Pattern Layer -->
  <div class="banner-pattern-bg absolute inset-0 w-full h-full pointer-events-none select-none"></div>
  
  <div class="max-w-[1280px] mx-auto px-4 relative z-10 flex flex-col items-center text-left pt-16">
    <!-- Dynamic Heading -->
    <h1 class="text-4xl md:text-5xl font-bold mb-8 text-white text-center" style="font-family: 'Playfair Display', serif;">{title}</h1>
    {subtitle && (
      <p class="text-xl text-white/90 max-w-2xl mx-auto text-center mb-8">
        {subtitle}
      </p>
    )}
  </div>
</section>

{showBreadcrumb && (
  <div class="bg-gray-100">
    <div class="max-w-7xl mx-auto px-6 py-3">
      <nav class="flex items-center text-sm text-gray-600">
        <a href={`/${currentLang === 'en' ? '' : currentLang}`} class="hover:text-primary transition-colors">Home</a>
        {breadcrumbItems.map((item, idx) => (
          <>
            <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
            {idx === breadcrumbItems.length - 1 ? (
              <span class="text-gray-900 font-medium">{item.label}</span>
            ) : (
              <a href={item.href} class="hover:text-primary transition-colors">{item.label}</a>
            )}
          </>
        ))}
      </nav>
    </div>
  </div>
)}

<style>
  .banner-gradient-overlay {
    background: linear-gradient(to bottom, #01513A 0%, #01513A 60%, rgba(1, 81, 58, 0.5) 100%) !important;
    opacity: 1 !important;
    z-index: 1 !important;
  }
  
  .banner-pattern-bg {
    background-image: url('/images/pattern.svg');
    background-repeat: repeat;
    background-size: 30px 50px;
    background-position: 0 0;
    opacity: 0.5;
    z-index: 0 !important;
  }
</style>
