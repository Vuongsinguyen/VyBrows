---
// AboutUsSection.astro - Professional About Us section component
const currentLang = Astro.url.pathname.split('/')[1] || 'en';
const stats = [
  {
    value: 14,
    suffix: '+',
    label:
      currentLang === 'vi' ? 'Năm kinh nghiệm'
      : currentLang === 'ja' ? '年の経験'
      : 'Years Experience',
    color: 'blue-600',
    darkColor: 'blue-400',
    bg: 'from-blue-50 to-blue-100',
    darkBg: 'from-blue-900/20 to-blue-800/20',
  },
  {
    value: 500,
    suffix: '+',
    label:
      currentLang === 'vi' ? 'Dự án hoàn thành'
      : currentLang === 'ja' ? '件のプロジェクト完了'
  : 'Trainings Completed',
    color: 'emerald-600',
    darkColor: 'emerald-400',
    bg: 'from-emerald-50 to-emerald-100',
    darkBg: 'from-emerald-900/20 to-emerald-800/20',
  },
  {
    value: 800,
    suffix: '+',
    label:
      currentLang === 'vi' ? 'Khách hàng hài lòng'
      : currentLang === 'ja' ? '満足した顧客'
      : 'Happy Clients',
    color: 'purple-600',
    darkColor: 'purple-400',
    bg: 'from-purple-50 to-purple-100',
    darkBg: 'from-purple-900/20 to-purple-800/20',
  },
  {
    value: 100,
    suffix: '+',
    label:
      currentLang === 'vi' ? 'Gặp gỡ đội ngũ'
      : currentLang === 'ja' ? 'チーム紹介'
      : 'Meet The Team',
    color: 'orange-600',
    darkColor: 'orange-400',
    bg: 'from-orange-50 to-orange-100',
    darkBg: 'from-orange-900/20 to-orange-800/20',
  },
];
---

<section id="why-choose-us" class="px-6 py-8" style="background: #003324;">
  <div class="max-w-6xl mx-auto">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold text-center mb-8" style="color: var(--color-black);">
  <h2 class="text-4xl md:text-5xl font-bold text-center mb-8" style="color: var(--color-black2white); font-family: 'Lora', serif;">
        {
          Astro.url.pathname.startsWith('/vi') ? 'Tại Sao Chọn Chúng Tôi?'
          : Astro.url.pathname.startsWith('/es') ? 'Por qué elegirnos?'
          : 'Why Choose Us?'
        }
      </h2>
  <p class="text-xl max-w-3xl mx-auto font-lora" style="color: var(--color-bg); font-family: 'Lora', serif; opacity: 0.9;">
        {
          Astro.url.pathname.startsWith('/vi')
            ? 'Tại VyBrows Academy, chúng tôi kết hợp chuyên môn, sự sáng tạo và niềm đam mê để mang đến dịch vụ và đào tạo PMU đẳng cấp quốc tế. Với hơn 20 năm kinh nghiệm, chúng tôi đảm bảo kỹ thuật an toàn, nhẹ nhàng, không đau và kết quả tự nhiên, rạng rỡ, tôn vinh vẻ đẹp của bạn một cách dễ dàng.'
            : Astro.url.pathname.startsWith('/es')
            ? 'En VyBrows Academy, combinamos experiencia, innovación y pasión para ofrecer servicios y capacitación de PMU de clase mundial. Con más de 20 años de experiencia, garantizamos técnicas seguras, indoloras y resultados naturales y deslumbrantes que realzan tu belleza sin esfuerzo.'
            : 'At VyBrows Academy, we combine expertise, innovation, and passion to deliver world-class PMU services and training. With over 20 years of experience, we ensure safe, painless techniques and natural, stunning results that enhance your beauty effortlessly.'
        }
      </p>
    </div>

    <!-- Main Content Grid (stretch each column to equal height) -->
    <div class="grid lg:grid-cols-2 gap-12 items-stretch mb-16">
      <!-- Left Content -->
      <div class="space-y-6" x-data="{ open: 0 }">
        <div class="space-y-4">
         <div class="mb-2 flex md:justify-start justify-center">
           <img
             src="/images/about_01.avif"
             alt="Expertise & Experience"
             class="w-20 h-20 object-cover rounded-full shadow-lg"
           />
         </div>
          <h3 class="text-2xl font-semibold cursor-pointer flex justify-between md:justify-start items-center gap-2" style="color: var(--color-black2white); font-family: 'Lora', serif; text-transform: uppercase;" @click="open = 0">
            <span>
              {
                currentLang === 'vi' ? 'SỨ MỆNH CỦA CHÚNG TÔI'
                : currentLang === 'ja' ? '私たちのミッション'.toUpperCase()
                : 'EXPERTISE & EXPERIENCE'
              }
            </span>
            <svg :class="open === 0 ? 'rotate-180' : ''" class="w-5 h-5 transition-transform duration-300" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"/></svg>
          </h3>
          <template x-if="open === 0">
            <p class="leading-relaxed transition-all duration-300" style="color: var(--color-black2white); opacity: 0.6;">
              {
                currentLang === 'vi'
                  ? 'Trao quyền cho doanh nghiệp bằng các giải pháp công nghệ tiên tiến giúp tăng năng suất, tối ưu vận hành và tạo ra trải nghiệm người dùng xuất sắc. Chúng tôi tin vào sự đổi mới tạo ra giá trị thực.'
                  : currentLang === 'ja'
                  ? '最先端の技術ソリューションで企業の生産性を高め、業務を効率化し、優れたユーザー体験を創出します。私たちは本当に価値あるイノベーションを信じています。'
                  : 'To empower businesses with cutting-edge technology solutions that enhance productivity, streamline operations, and create exceptional user experiences. We believe in innovation that makes a real difference.'
              }
            </p>
          </template>
        </div>

        <div class="space-y-4">
         <div class="mb-2 flex md:justify-start justify-center">
           <img
             src="/images/about_02.avif"
             alt="Safe & Painless Techniques"
             class="w-20 h-20 object-cover rounded-full shadow-lg"
           />
         </div>
          <h3 class="text-2xl font-semibold cursor-pointer flex justify-between md:justify-start items-center gap-2" style="color: var(--color-black2white); font-family: 'Lora', serif; text-transform: uppercase;" @click="open = 1">
            <span>
              {
                currentLang === 'vi' ? 'TẦM NHÌN CỦA CHÚNG TÔI'
                : currentLang === 'es' ? '私たちのビジョン'.toUpperCase()
                : 'SAFE & PAINLESS TECHNIQUES'
              }
            </span>
            <svg :class="open === 1 ? 'rotate-180' : ''" class="w-5 h-5 transition-transform duration-300" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"/></svg>
          </h3>
          <template x-if="open === 1">
            <p class="leading-relaxed transition-all duration-300" style="color: var(--color-black2white); opacity: 0.6;">
              {
                currentLang === 'vi'
                  ? 'Trở thành đối tác tin cậy trong chuyển đổi số, giúp doanh nghiệp tự tin thích ứng với công nghệ mới và tăng trưởng bền vững nhờ các giải pháp sáng tạo.'
                  : currentLang === 'es'
                  ? 'デジタル変革の信頼できるパートナーとして、企業が進化する技術環境に自信を持って対応し、革新的なソリューションで持続的な成長を実現します。'
                  : 'To be the trusted partner for digital transformation, helping companies navigate the evolving technological landscape with confidence and achieve sustainable growth through innovative solutions.'
              }
            </p>
          </template>
        </div>
        <div class="space-y-4">
         <div class="mb-2 flex md:justify-start justify-center">
           <img
             src="/images/about_03.avif"
             alt="World-class Training"
             class="w-20 h-20 object-cover rounded-full shadow-lg"
           />
         </div>
          <h3 class="text-2xl font-semibold cursor-pointer flex justify-between md:justify-start items-center gap-2" style="color: var(--color-black2white); font-family: 'Lora', serif; text-transform: uppercase;" @click="open = 2">
            <span>
              {
                currentLang === 'vi' ? 'TẦM NHÌN CỦA CHÚNG TÔI'
                : currentLang === 'es' ? '私たちのビジョン'.toUpperCase()
                : 'WORLD-CLASS TRAINING'
              }
            </span>
            <svg :class="open === 2 ? 'rotate-180' : ''" class="w-5 h-5 transition-transform duration-300" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"/></svg>
          </h3>
          <template x-if="open === 2">
            <p class="leading-relaxed transition-all duration-300" style="color: var(--color-black2white); opacity: 0.6;">
              {
                currentLang === 'vi'
                  ? 'Trở thành đối tác tin cậy trong chuyển đổi số, giúp doanh nghiệp tự tin thích ứng với công nghệ mới và tăng trưởng bền vững nhờ các giải pháp sáng tạo.'
                  : currentLang === 'es'
                  ? 'デジタル変革の信頼できるパートナーとして、企業が進化する技術環境に自信を持って対応し、革新的なソリューションで持続的な成長を実現します。'
                  : 'To be the trusted partner for digital transformation, helping companies navigate the evolving technological landscape with confidence and achieve sustainable growth through innovative solutions.'
              }
            </p>
          </template>
        </div>
        <div class="space-y-4">
          <div class="mb-2 flex md:justify-start justify-center">
            <img
              src="/images/about_04.avif"
              alt="Natural & Stunning Results"
              class="w-20 h-20 object-cover rounded-full shadow-lg"
            />
         </div>
          <h3 class="text-2xl font-semibold cursor-pointer flex justify-between md:justify-start items-center gap-2" style="color: var(--color-black2white); font-family: 'Lora', serif; text-transform: uppercase;" @click="open = 3">
            <span>
              {
                currentLang === 'vi' ? 'KẾT QUẢ TỰ NHIÊN & RẠNG RỎ'
                : currentLang === 'es' ? 'RESULTADOS NATURALES Y DESLUMBRANTES'.toUpperCase()
                : 'NATUAL & STUNNING RESULTS'
              }
            </span>
            <svg :class="open === 3 ? 'rotate-180' : ''" class="w-5 h-5 transition-transform duration-300" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"/></svg>
          </h3>
          <template x-if="open === 3">
            <p class="leading-relaxed transition-all duration-300" style="color: var(--color-black2white); opacity: 0.6;">
              {
                currentLang === 'vi'
                  ? 'Trở thành đối tác tin cậy trong chuyển đổi số, giúp doanh nghiệp tự tin thích ứng với công nghệ mới và tăng trưởng bền vững nhờ các giải pháp sáng tạo.'
                  : currentLang === 'es'
                  ? 'デジタル変革の信頼できるパートナーとして、企業が進化する技術環境に自信を持って対応し、革新的なソリューションで持続的な成長を実現します。'
                  : 'To be the trusted partner for digital transformation, helping companies navigate the evolving technological landscape with confidence and achieve sustainable growth through innovative solutions.'
              }
            </p>
          </template>
        </div>
      </div>

      <!-- Right Content - Stats -->
      <div class="grid grid-cols-2 gap-6">
        {stats.map((stat, idx) => (
          <div class="stat-card-border-gradient h-full" style="border-radius: 40px; padding: 1px;">
            <div class="p-4 md:p-6 text-center stat-card-gradient h-full" style="font-family: 'Lora', serif; display: flex; flex-direction: column; align-items: center; justify-content: center; border-radius: 38px; background: #003324;">
               <div class="card-shine" id={`card-shine-${idx}`}></div>
               <div>
                 <div
                  id={`stat-anim-${idx}`}
                  data-target={stat.value}
                  class="
                    mb-2
                    text-[48px]    /* mobile: 40px */
                    sm:text-[60px] /* ≥640px: 60px */
                    md:text-[70px] /* ≥768px: 80px */
                    font-light
                    bg-gradient-to-t
                    from-transparent
                    via-[var(--color-black2white)]
                    to-[var(--color-black2white)]
                    bg-clip-text
                    text-transparent
                  "
                  style="font-family: 'SF Pro Display','Lato','Lora', serif;"
                >
                  0{stat.suffix}
                </div>
                <div style="color: var(--color-bg); font-size: 1.25rem;" class="font-medium">{stat.label}</div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
  <style>
  .stat-card-border-gradient {
    border-radius: 40px;
    padding: 1px;
    background: linear-gradient(-45deg, #FFFACD, rgba(255, 250, 205, 0) 40%, #F5DEB3 60%, rgba(255, 250, 205, 0) 100%);
    background-clip: border-box;
    overflow: visible;
    /* Hiệu ứng viền gradient bo góc */
  }
  .card-shine {
    position: absolute;
    top: 70%; left: 70%;
    width: 80%; height: 80%;
    pointer-events: none;
    background: linear-gradient(120deg, rgba(255,255,255,0) 60%, rgba(255,255,255,0.7) 80%, rgba(255,255,255,0) 100%);
    filter: blur(40px);
    opacity: 0;
    transition: opacity 0.3s;
    z-index: 2;
  }
  .stat-card-gradient {
  border-radius: 36px;
  background: #003324;
  overflow: hidden;
  box-shadow: 8px 16px 32px 0 rgba(0,0,0,0.10), 4px 8px 16px 0 rgba(255, 215, 0, 0.10);
  position: relative;
  transition: background 0.5s cubic-bezier(0.33, 1, 0.68, 1), transform 0.8s cubic-bezier(0.33, 1, 0.68, 1), box-shadow 0.8s cubic-bezier(0.33, 1, 0.68, 1);
  }
  .stat-card-gradient:hover {
  background: #014A2D;
  transform: translateY(-12px);
  box-shadow: 0 24px 48px 0 rgba(0,0,0,0.18), 0 8px 32px 0 rgba(255, 215, 0, 0.18);
  transition: background 0.5s cubic-bezier(0.33, 1, 0.68, 1), transform 0.5s cubic-bezier(0.22, 1, 0.36, 1), box-shadow 0.5s cubic-bezier(0.22, 1, 0.36, 1);
  }
  .stat-card-gradient {
    background: #003324;
    transition: background 0.5s cubic-bezier(0.33, 1, 0.68, 1), transform 0.8s cubic-bezier(0.33, 1, 0.68, 1), box-shadow 0.8s cubic-bezier(0.33, 1, 0.68, 1);
  }
  .stat-card-gradient:hover .card-shine {
    opacity: 1;
    transition: opacity 0.3s;
  }
    .stat-card-gradient:hover {
  /* background: #8fffd2; */
    }
  </style>
 </section>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const statsSection = document.querySelector('.grid.grid-cols-2');
  let animated = false;
  if (!statsSection) return;

  // Shine effect every 10s
  function triggerShine(card) {
    const shine = card.querySelector('.card-shine');
    if (!shine) return;
    shine.classList.remove('active');
    void shine.offsetWidth;
    shine.classList.add('active');
    setTimeout(() => shine.classList.remove('active'), 500);
  }
  document.querySelectorAll('.stat-card-gradient').forEach(card => {
    card.addEventListener('mouseenter', () => triggerShine(card));
  });

  // Stat animation
  const animateStats = () => {
    if (animated) return;
    animated = true;
    document.querySelectorAll('[id^="stat-anim-"]').forEach(el => {
      const target = parseInt(el.dataset.target, 10);
      const suffix = el.textContent.replace(/[0-9]/g, '');
      let count = 0;
      const duration = 1200;
      const step = Math.ceil(target / (duration / 16));
      function animate() {
        count += step;
        if (count >= target) {
          el.textContent = target + suffix;
        } else {
          el.textContent = count + suffix;
          requestAnimationFrame(animate);
        }
      }
      animate();
    });
  };

  const observer = new IntersectionObserver((entries) => {
    if (entries[0].isIntersecting) {
      animateStats();
      observer.disconnect();
    }
  }, { threshold: 0.3 });

  observer.observe(statsSection);
});
</script>
