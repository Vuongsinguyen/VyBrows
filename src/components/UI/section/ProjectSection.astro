---
import { getCollection } from "astro:content";
import ProjectCard from '../cards/ProjectCard.astro';


const categories = [
  { name: "All", key: "All" },
  { name: "Web", key: "Web" },
  { name: "Mobile", key: "Mobile" },
  { name: "Enterprise", key: "Enterprise" }
];

const lang = Astro.props?.lang || Astro.url.pathname.split('/')[1] || 'en';
const allProjects = (await getCollection("projects")).filter(p => p.id.endsWith(`.${lang}.md`));
const projects: Record<string, any[]> = {};
projects["All"] = allProjects.map(p => {
  // Lấy đường dẫn sau "projects/"
  const slug = p.id
    .replace(/^projects\//, '')                // bỏ 'projects/' đầu
    .replace(/\.(en|vi|ja)\.md$/, '')          // bỏ .en.md, .vi.md, .ja.md
    .replace(/\.md$/, '');                     // bỏ .md nếu không có mã ngôn ngữ
  return {
    ...p.data,
    href: `/${lang}/projects/${slug}`
  };
});
for (const cat of categories) {
  if (cat.key !== "All") {
    projects[cat.key] = allProjects
      .filter(p => p.data.category === cat.key)
      .map(p => {
        const slug = p.id
          .replace(/^projects\//, '')
          .replace(/\.(en|vi|ja)\.md$/, '')
          .replace(/\.md$/, '');
        return {
          ...p.data,
          href: `/${lang}/projects/${slug}`
        };
      });
  }
}
---

<section class="py-16 px-6" style="background: var(--color-bg);">
  <div class="max-w-7xl mx-auto">
    <h2 class="text-4xl md:text-5xl font-bold text-center mb-8" style="color: var(--color-black);">
      Our Projects
    </h2>
    <!-- Tabs -->
    <div id="project-tabs" class="flex justify-center gap-4 mb-8">
      {categories.map(cat => (
        <button
          type="button"
          class="px-6 py-2 rounded-xl font-normal transition-colors duration-200 border border-blue-500/30 bg-transparent text-black hover:bg-blue-500/30 hover:text-blue-500 focus:outline-none"
          data-tab={cat.key}
        >
          {cat.name}
        </button>
      ))}
    </div>

    {categories.map(cat => (
      <div id={`tab-content-${cat.key}`} class="tab-content" style={`display: ${cat.key === 'All' ? 'block' : 'none'};`}>
        <div class="space-y-8">
          {[0, 1].map(row => (
            <div class="grid md:grid-cols-3 gap-8">
              {projects[cat.key].slice(row * 3, row * 3 + 3).map((proj, idx) => (
                <a href={proj.href} style="text-decoration:none"><ProjectCard {...proj} /></a>
              ))}
            </div>
          ))}
        </div>
      </div>
    ))}

    <!-- All Projects Button -->
    <div class="flex justify-center mt-12">
      <a href={`/${Astro.url.pathname.split('/')[1]}/projects`} class="inline-block px-8 py-3 rounded-xl bg-blue-600 text-white font-semibold text-lg shadow hover:bg-blue-700 transition">
        All Projects
      </a>
    </div>
  </div>
</section>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const tabs = document.querySelectorAll('#project-tabs button');
  const contents = document.querySelectorAll('.tab-content');
  tabs.forEach(tab => {
    tab.addEventListener('click', () => {
      tabs.forEach(t => {
        t.classList.remove('tab-active');
      });
      tab.classList.add('tab-active');
      contents.forEach(c => c.style.display = 'none');
      document.getElementById(`tab-content-${tab.dataset.tab}`).style.display = 'block';
    });
  });
  // Set default active tab
  const defaultTab = tabs[0];
  defaultTab.classList.add('tab-active');
});
</script>
<style>
#project-tabs button.tab-active {
  background: rgba(59,130,246,0.3); /* blue-500/30 */
  color: #3b82f6 !important; /* blue-500 */
  border-color: rgba(59,130,246,0.3);
}
</style>