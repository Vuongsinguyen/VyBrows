---
import { getCollection } from "astro:content";
import ProjectCard from '../cards/ProjectCard.astro';

const categories = [
  { name: "All", key: "All" },
  { name: "Web", key: "Web" },
  { name: "Mobile", key: "Mobile" },
  { name: "Enterprise", key: "Enterprise" }
];

const lang = Astro.props?.lang || Astro.url.pathname.split('/')[1] || 'en';
const allProjects = (await getCollection("projects")).filter(p => p.id.endsWith(`.${lang}.md`));
const projects: Record<string, any[]> = {};
projects["All"] = allProjects.map(p => {
  const slug = p.id
    .replace(/^projects\//, '')
    .replace(/\.(en|vi|ja)\.md$/, '')
    .replace(/\.md$/, '');
  return {
    ...p.data,
    href: `/${lang}/projects/${slug}`
  };
});
for (const cat of categories) {
  if (cat.key !== "All") {
    projects[cat.key] = allProjects
      .filter(p => p.data.category === cat.key)
      .map(p => {
        const slug = p.id
          .replace(/^projects\//, '')
          .replace(/\.(en|vi|ja)\.md$/, '')
          .replace(/\.md$/, '');
        return {
          ...p.data,
          href: `/${lang}/projects/${slug}`
        };
      });
  }
}
---

<section class="py-16 px-6" style="background: var(--color-bg);">
  <div class="max-w-7xl mx-auto">
    <h2 class="text-4xl md:text-5xl font-bold text-center mb-8 font-lora" style="color: var(--color-black); font-family: 'Lora', serif;">
      PMU Training & Academy
    </h2>
    <p class="text-lg text-center mb-10 font-lora" style="color: var(--color-black); font-family: 'Lora', serif; max-width:700px; margin:0 auto;">
      At VyBrows Academy, permanent makeup is a blend of art and science, perfected to enhance natural beauty. Our highly trained team upholds the highest standards of hygiene and professionalism, ensuring comfort and safety in all our procedures.
    </p>

    <div class="w-full flex justify-center">
      <div
        class="flex md:flex-row flex-col gap-[5px] project-container
                mx-0 md:mx-[30px]"
        style="max-width:1180px; width:100%;"
      >
        {projects["All"].slice(0, 4).map((proj, idx) => {
          const isWide = idx === 1;
          let cardProps = proj;
          if (idx === 0) cardProps = { ...proj, name: 'Emily Bui' };
          if (idx === 1) cardProps = { ...proj, name: 'Vy Nguyen' };
          if (idx === 2) cardProps = { ...proj, name: 'Kim Nguyen' };
          if (idx === 3) cardProps = { ...proj, name: 'Vanessa Nguyen' };
          return (
            <div
              class={`project-card-link group${isWide ? ' card-wide' : ''}`}
            >
              <ProjectCard {...cardProps} />
            </div>
          );
        })}
      </div>
    </div>

    <style>
      /* Mobile: make cards full width */
      @media (max-width: 767px) {
        .project-card-link {
          max-width: 100% !important;
        }
      }

      .project-card-link {
        flex: 1 1 0;
        max-width: 350px;
        transition: flex-grow 0.3s ease, max-width 0.3s ease;
        min-width: 0;
      }

      @media (min-width: 768px) {
        /* Default wide card */
        .project-card-link.card-wide {
          flex-grow: 1.3;
          max-width: 450px;
        }

        /* Reset on container hover */
        .project-container:hover .project-card-link {
          flex-grow: 1;
          max-width: 350px;
        }

        .project-container:hover .project-card-link:hover {
          flex-grow: 1.3;
          max-width: 450px;
        }
      }
    </style>
  </div>
</section>