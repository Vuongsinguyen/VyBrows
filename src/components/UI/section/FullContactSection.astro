---
/* Frontmatter có thể để trống hoặc thêm logic server nếu cần */
---
<section id="contact" class="pt-16 pb-16 bg-primary contact-section">
  <div class="max-w-7xl mx-auto px-6">
    {/** Detect current language from URL **/}
    {(() => {
      const lang = (Astro.url.pathname.split('/')[1] || 'en') as 'en' | 'vi' | 'ja' | 'ko' | 'es';
      const labels = {
        en: {
          contact: "Contact Us",
          name: "Name",
          email: "Email",
          phone: "Phone",
          service: "Subject",
          selectService: "Enter Subject",
          message: "Message",
          submit: "Submit",
          address: "Address:",
          phoneLabel: "Phone:",
          emailLabel: "Email:",
          openHours: "Open Hours:",
          success: "✅ Sent successfully!",
          error: "❌ Send failed",
          captcha: "❌ Please verify security.",
        },
        vi: {
          contact: "Liên hệ",
          name: "Họ tên",
          email: "Email",
          phone: "Số điện thoại",
          service: "Chủ đề",
          selectService: "Nhập chủ đề",
          message: "Nội dung",
          submit: "Gửi",
          address: "Địa chỉ:",
          phoneLabel: "Điện thoại:",
          emailLabel: "Email:",
          openHours: "Giờ mở cửa:",
          success: "✅ Sent successfully! We will contact you soon.",
          error: "❌ Send failed.",
          captcha: "❌ Vui lòng xác minh bảo mật.",
        },
        ja: {
          contact: "お問い合わせ",
          name: "お名前",
          email: "メール",
          phone: "電話番号",
          service: "件名",
          selectService: "件名を入力",
          message: "メッセージ",
          submit: "送信",
          address: "住所:",
          phoneLabel: "電話:",
          emailLabel: "メール:",
          openHours: "営業時間:",
          success: "✅ 送信成功!",
          error: "❌ 送信失敗",
          captcha: "❌ セキュリティ認証してください。",
        },
        ko: {
          contact: "문의하기",
          name: "이름",
          email: "이메일",
          phone: "전화번호",
          service: "제목",
          selectService: "제목 입력",
          message: "메시지",
          submit: "보내기",
          address: "주소:",
          phoneLabel: "전화:",
          emailLabel: "이메일:",
          openHours: "영업시간:",
          success: "✅ 성공적으로 전송됨!",
          error: "❌ 전송 실패",
          captcha: "❌ 보안 인증을 해주세요.",
        },
        es: {
          contact: "Contáctanos",
          name: "Nombre",
          email: "Correo electrónico",
          phone: "Teléfono",
          service: "Asunto",
          selectService: "Ingresa asunto",
          message: "Mensaje",
          submit: "Enviar",
          address: "Dirección:",
          phoneLabel: "Teléfono:",
          emailLabel: "Correo electrónico:",
          openHours: "Horario:",
          success: "✅ ¡Enviado exitosamente!",
          error: "❌ Error al enviar",
          captcha: "❌ Por favor verifica la seguridad.",
        },
      };
      return <h2 class="text-4xl md:text-5xl font-extrabold text-center mb-8 font-lora tracking-tight" style="color:#f8f7dc; font-family:'Lora', serif;">{labels[lang].contact}</h2>;
    })()}

    <div class="w-full mb-8">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 bg-primary text-white rounded-2xl text-base items-start">
        <div class="flex flex-col gap-4">
          <!-- Address -->
          <div class="border border-white/20 rounded-xl px-4 py-3 flex items-center">
            <span class="inline-flex items-center justify-center w-[46px] h-[46px] shrink-0 rounded-full border border-white/80 mr-3" style="border-width:1px; background:transparent;">
              <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" style="color: var(--color-black2white);">
                <path d="M10 2C6.13 2 3 5.13 3 9c0 5.25 7 11 7 11s7-5.75 7-11c0-3.87-3.13-7-7-7zm0 9.5A2.5 2.5 0 1 1 10 6a2.5 2.5 0 0 1 0 5.5z"/>
              </svg>
            </span>
            <div>
              <div class="font-bold text-lg mb-1">Address:</div>
              <div>13192 Bellaire Blvd #B, Houston, TX 77072</div>
            </div>
          </div>
          <!-- Phone -->
          <div class="border border-white/20 rounded-xl px-4 py-3 flex items-center">
            <span class="inline-flex items-center justify-center w-[46px] h-[46px] shrink-0 rounded-full border border-white/80 mr-3" style="border-width:1px; background:transparent;">
              <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 26 26" style="color: var(--color-black2white);">
                <path d="M5.59347 10.624C7.51347 14.3973 10.6068 17.4773 14.3801 19.4106L17.3135 16.4773C17.6735 16.1173 18.2068 15.9973 18.6735 16.1573C20.1668 16.6506 21.7801 16.9173 23.4335 16.9173C24.1668 16.9173 24.7668 17.5173 24.7668 18.2506V22.904C24.7668 23.6373 24.1668 24.2373 23.4335 24.2373C10.9135 24.2373 0.7668 14.0906 0.7668 1.57064C0.7668 0.837305 1.3668 0.237305 2.10013 0.237305H6.7668C7.50013 0.237305 8.10013 0.837305 8.10013 1.57064C8.10013 3.2373 8.3668 4.83731 8.86013 6.33064C9.0068 6.79731 8.90013 7.31731 8.5268 7.69064L5.59347 10.624Z"/>
              </svg>
            </span>
            <div>
              <div class="font-bold text-lg mb-1">Phone:</div>
              <div>346-409-9999 | 346-409-8888 <span class="text-sm">(English Speaker)</span></div>
            </div>
          </div>
        </div>
        <div class="flex flex-col gap-4">
          <!-- Email -->
          <div class="border border-white/20 rounded-xl px-4 py-3 flex items-center">
            <span class="inline-flex items-center justify-center w-[46px] h-[46px] shrink-0 rounded-full border border-white/80 mr-3" style="border-width:1px; background:transparent;">
              <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 36 30" style="color: var(--color-black2white);">
                <path d="M36.1714 4.4374C36.1714 2.4574 34.5514 0.837402 32.5714 0.837402H3.77145C1.79145 0.837402 0.171448 2.4574 0.171448 4.4374V26.0374C0.171448 28.0174 1.79145 29.6374 3.77145 29.6374H32.5714C34.5514 29.6374 36.1714 28.0174 36.1714 26.0374V4.4374ZM32.5714 4.4374L18.1714 13.4374L3.77145 4.4374H32.5714ZM32.5714 26.0374H3.77145V8.0374L18.1714 17.0374L32.5714 8.0374V26.0374Z" />
              </svg>
            </span>
            <div>
              <div class="font-bold text-lg mb-1">Email:</div>
              <div>vybrowsk@gmail.com</div>
            </div>
          </div>
          <!-- Open Hours -->
          <div class="border border-white/20 rounded-xl px-4 py-3 flex items-center">
            <span class="inline-flex items-center justify-center w-[46px] h-[46px] shrink-0 rounded-full border border-white/80 mr-3" style="border-width:1px; background:transparent;">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 36 36" style="color: var(--color-black2white);">
                <path d="M18.3259 0.237305C8.38992 0.237305 0.343918 8.3013 0.343918 18.2373C0.343918 28.1733 8.38992 36.2373 18.3259 36.2373C28.2799 36.2373 36.3439 28.1733 36.3439 18.2373C36.3439 8.3013 28.2799 0.237305 18.3259 0.237305ZM18.3439 32.6373C10.3879 32.6373 3.94392 26.1933 3.94392 18.2373C3.94392 10.2813 10.3879 3.8373 18.3439 3.8373C26.2999 3.8373 32.7439 10.2813 32.7439 18.2373C32.7439 26.1933 26.2999 32.6373 18.3439 32.6373ZM19.2439 9.2373H16.5439V20.0373L25.9939 25.7073L27.3439 23.4933L19.2439 18.6873V9.2373Z"/>
              </svg>
            </span>
            <div>
              <div class="font-bold text-lg mb-1">Open Hours:</div>
              <div class="flex gap-4 flex-wrap">
                <span>Mon – Fri: 10:00 – 18:00</span>
                <span>Sat &amp; Sun: 10:00 – 17:00</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- 2 columns: Map & Form -->
    <div class="flex flex-col md:flex-row gap-[34px]">
      <!-- Map column -->
      <div class="w-full md:w-1/2 flex flex-col rounded-2xl shadow-lg bg-surface overflow-hidden">
        <iframe
          class="w-full flex-1"
          src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3465.546055721214!2d-95.61564448830596!3d29.703937974993018!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8640ddecac735047%3A0xa513ff1ff0b5ffe8!2sVyBrows%20Academy!5e0!3m2!1sen!2s!4v1755529433006!5m2!1sen!2s"
        ></iframe>
      </div>
      <!-- Form column -->
      <div class="w-full md:w-1/2 flex flex-col rounded-2xl shadow-lg bg-surface">
  <form id="contactForm" class="px-8 py-8 flex flex-col gap-0 flex-1">
          {(() => {
            const lang = (Astro.url.pathname.split('/')[1] || 'en') as 'en' | 'vi' | 'ja' | 'ko' | 'es';
            const labels = {
              en: { name: "Name", email: "Email", phone: "Phone", service: "Subject", selectService: "Enter Subject", message: "Message", submit: "Submit" },
              vi: { name: "Họ tên", email: "Email", phone: "Số điện thoại", service: "Chủ đề", selectService: "Nhập chủ đề", message: "Nội dung", submit: "Gửi" },
              ja: { name: "お名前", email: "メール", phone: "電話番号", service: "件名", selectService: "件名を入力", message: "メッセージ", submit: "送信" },
              ko: { name: "이름", email: "이메일", phone: "전화번호", service: "제목", selectService: "제목 입력", message: "메시지", submit: "보내기" },
              es: { name: "Nombre", email: "Correo electrónico", phone: "Teléfono", service: "Asunto", selectService: "Ingresa asunto", message: "Mensaje", submit: "Enviar" },
            };

            return <>
              {/* Name */}
              <div class="mb-4">
                <label for="name" class="block text-sm font-medium mb-1 font-lora text-primary">{labels[lang].name}</label>
                <input type="text" name="name" id="name" required class="field-input" placeholder={labels[lang].name} />
              </div>
              {/* Email */}
              <div class="mb-4">
                <label for="email" class="block text-sm font-medium mb-1 font-lora text-primary">{labels[lang].email} <span class="text-xs opacity-70">(Optional)</span></label>
                <input type="email" name="email" id="email" class="field-input" placeholder={labels[lang].email} />
              </div>
              {/* Phone */}
              <div class="mb-4">
                <label for="phone" class="block text-sm font-medium mb-1 font-lora text-primary">{labels[lang].phone}</label>
                <input type="text" name="phone" id="phone" required class="field-input" placeholder={labels[lang].phone} />
              </div>
              {/* Subject */}
              <div class="mb-4">
                <label for="subject" class="block text-sm font-medium mb-1 font-lora text-primary">{labels[lang].service}</label>
                <input type="text" name="subject" id="subject" required class="field-input" placeholder={labels[lang].selectService} />
              </div>
              {/* Message */}
              <div class="mb-4">
                <label for="message" class="block text-sm font-medium mb-1 font-lora text-primary">{labels[lang].message}</label>
                <textarea name="message" id="message" rows="4" class="field-input" placeholder={labels[lang].message}></textarea>
              </div>
              {/* Submit */}
              <div id="formStatusWrapper">
                <button type="submit" class="mt-2 px-6 rounded-lg !bg-primary hover:!bg-primary-hover text-white font-bold text-lg shadow transition self-center submit-btn" style="min-width:120px; padding-top:14px; padding-bottom:14px; background-color: var(--color-primary) !important;">{labels[lang].submit}</button>
                <div id="formStatus" aria-live="polite"></div>
              </div>
            </>;
          })()}
      </div>
    </div>
  </div>
</section>

<style>
@import url('https://fonts.googleapis.com/css2?family=Lora:wght@400;500;600;700&display=swap');
.font-lora { font-family: 'Lora', serif; }

.contact-section { font-family: 'Lora', serif; font-size:16px; line-height:1.5; }

.field-input { width:100%; padding:.55rem 1rem; border:1px solid #c4d5cf; border-radius:.65rem; background:#eef3f1; color:var(--color-primary); font-size:16px; line-height:1.4; transition:border-color .2s, box-shadow .2s, background .2s; }
.field-input::placeholder { color:#5d746b; opacity:.9; }
.field-input:focus { outline:0; border-color:#339f7b; box-shadow:0 0 0 2px rgba(51,159,123,.25); background:#f5f9f7; }

@media (prefers-color-scheme: dark) {
  .field-input { background:#294b40; border-color:#3d6255; color:#f8f7dc; }
  .field-input::placeholder { color:#aac4bb; }
  .field-input:focus { border-color:#48c19a; box-shadow:0 0 0 2px rgba(72,193,154,.35); background:#325a4d; }
}

#formStatusWrapper { position:relative; display:inline-flex; align-items:center; gap:16px; }
#formStatus { position:relative; margin-top:.6rem; padding:.65rem .9rem; border-radius:.6rem; font-size:.85rem; line-height:1.3; background:var(--color-primary); color:#f8f7dc; border:1px solid rgba(255,255,255,.18); box-shadow:0 4px 14px -4px rgba(0,0,0,.45); opacity:0; transform:translateY(-4px); transition:opacity .25s ease, transform .25s ease; max-width:360px; }
#formStatus.show { opacity:1; transform:translateY(0); }
#formStatus.success { border-color:#16a34a; }
#formStatus.error { border-color:#dc2626; }
#formStatus .close-btn { position:absolute; top:4px; right:6px; cursor:pointer; font-weight:600; opacity:.65; }
#formStatus .close-btn:hover { opacity:1; }
</style>

<script>
(function() {
  const statusEl = () => document.getElementById('formStatus');
  function setStatus(msg: string, type?: string) {
    const el = statusEl(); if(!el) return;
    el.className = ''; el.id='formStatus'; if(type) el.classList.add(type);
    el.innerHTML = `<span class="close-btn" aria-label="Close" title="Close">×</span>${msg}`;
    requestAnimationFrame(()=> el.classList.add('show'));
    el.querySelector('.close-btn')?.addEventListener('click', ()=> el.classList.remove('show'));
  }
  function autoHide(ms=3500){ const el = statusEl(); if(!el) return; setTimeout(()=> el.classList.remove('show'), ms); }

  document.addEventListener('DOMContentLoaded', ()=>{
    const form = document.getElementById('contactForm') as HTMLFormElement; if(!form) return;
    const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;

    form.addEventListener('submit', async (e)=>{
      e.preventDefault(); if((form as any).dataset.sending==='1') return;

      (form as any).dataset.sending='1';
      if(submitBtn){ submitBtn.disabled=true; (submitBtn as any).dataset.originalText=submitBtn.textContent; submitBtn.textContent='Sending...'; }
      setStatus('Đang gửi...', 'info');

      const fd=new FormData(form); const payload: any={}; fd.forEach((v,k)=>payload[k]=String(v));

      try{
        const res=await fetch('/.netlify/functions/sendMail',{ method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(payload) });
        const result=await res.json().catch(()=>({}));
        if(res.ok && result.message === 'Email sent successfully'){ setStatus('✅ Sent successfully! We will contact you soon!', 'success'); form.reset(); }
        else { setStatus('❌ Failed to send: '+(result.message||'Unknown error'), 'error'); }
      } catch { setStatus('❌ Network error (failed to send)', 'error'); }
      finally {
        if(submitBtn){ submitBtn.disabled=false; submitBtn.textContent=(submitBtn as any).dataset.originalText||'Submit'; }
        delete (form as any).dataset.sending;
      }
    });
  });
})();
</script>

