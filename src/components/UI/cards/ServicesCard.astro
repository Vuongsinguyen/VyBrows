---
export interface Props {
  title: string;
  description: string;
  image?: string;
  link?: string;
  class?: string;
}
const { title, description, image, link, class: customClass = "" } = Astro.props;
---

<div class={`relative ${customClass}`} style="height: 250px; margin-bottom: 10px; background: #003324; border: 2px solid #E1C18D; border-radius: 1rem;">
  <a href={link} class="block w-full h-full group relative overflow-hidden" style="height: 100%; border-radius: calc(1rem - 2px);">
  <!-- Hiệu ứng stroke vàng chạy xung quanh khi hover -->
  <div class="absolute inset-0 rounded-2xl pointer-events-none z-20 transition-all duration-300 group-hover:animate-gold-stroke"></div>
  <div class="absolute inset-0 w-full h-full">
    {image && (
      <img
        src={image}
        alt={title}
        class="w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-110"
        style="border-radius: calc(1rem - 2px);"
      />
    )}
    <div class="absolute inset-0 w-full h-full pointer-events-none glitter-overlay"></div>
    <!-- Nền xanh khi hover -->
    <div class="absolute inset-0 w-full h-full transition-colors duration-300 group-hover:bg-[#002319] opacity-80"></div>
  </div>
  <div class="relative z-10 flex flex-col justify-center items-center h-full p-6">
    <!-- Hiển thị description khi hover, nằm trên Title -->
  <p class="text-base opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-center mb-2" style="font-family: 'Lora', serif; color: #FFD97A;">{description}</p>
  </div>
  </a>
  <div class="gold-title-border px-3 py-1" style="position: absolute; left: 50%; bottom: 0; transform: translateX(-50%) translateY(50%); z-index: 20;">
  <h3 class="font-bold text-xl rounded-md px-4 py-1 whitespace-nowrap text-center" style="color: #003324; background: transparent; min-width: 200px; width: fit-content; max-width: 100vw; display: block; margin: 0 auto; font-family: 'Lora', serif;">{title}</h3>
  </div>
  </div>
</a>

<style>
.glitter-overlay {
  background: url('https://www.transparenttextures.com/patterns/glitter.png'), linear-gradient(120deg, rgba(255,255,255,0.2) 0%, rgba(255,215,150,0.3) 100%);
  opacity: 0.5;
  mix-blend-mode: lighten;
  pointer-events: none;
  width: 100%;
  height: 100%;
}
.gold-title-border {
  background: linear-gradient(90deg, #E1C18D 0%, #FFFEFB 25%, #FFE6B8 50%, #FFFEFB 75%, #E1C18D 100%);
  border-radius: 5px;
  border: 1px solid #FFF;
  padding: 2px;
  display: inline-block;
}
@keyframes gold-stroke {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 214, 10, 0.8), 0 0 0 0 rgba(255, 214, 10, 0.5);
    border: 2px solid rgba(255, 214, 10, 0.5);
  }
  50% {
    box-shadow: 0 0 16px 4px rgba(255, 214, 10, 0.8), 0 0 32px 8px rgba(255, 214, 10, 0.5);
    border: 2px solid rgba(255, 214, 10, 1);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 214, 10, 0.8), 0 0 0 0 rgba(255, 214, 10, 0.5);
    border: 2px solid rgba(255, 214, 10, 0.5);
  }
}
.animate-gold-stroke {
  animation: gold-stroke 1.2s linear infinite;
  border: 2px solid rgba(255, 214, 10, 0.8);
  box-shadow: 0 0 8px 2px rgba(255, 214, 10, 0.6);
}

/* Disable hover‐only effects on touch devices so scrolling won't trigger hover */
@media (hover: none) and (pointer: coarse) {
  /* Stop the gold stroke animation */
  .group-hover\:animate-gold-stroke {
    animation: none !important;
  }
  /* Prevent image scale on touch */
  .group-hover\:scale-110 {
    transform: none !important;
  }
  /* Disable background tint on touch */
  .group-hover\:bg-\[\#002319\] {
    background-color: transparent !important;
  }
  /* Ensure description stays hidden until explicit tap */
  .group-hover\:opacity-100 {
    opacity: 0 !important;
  }
}
</style>
