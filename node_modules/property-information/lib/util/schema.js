/**
<<<<<<< HEAD
 * @typedef {import('./info.js').Info} Info
 * @typedef {Record<string, Info>} Properties
 * @typedef {Record<string, string>} Normal
 */

export class Schema {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(property, normal, space) {
    this.property = property
    this.normal = normal
=======
 * @import {Schema as SchemaType, Space} from 'property-information'
 */

/** @type {SchemaType} */
export class Schema {
  /**
   * @param {SchemaType['property']} property
   *   Property.
   * @param {SchemaType['normal']} normal
   *   Normal.
   * @param {Space | undefined} [space]
   *   Space.
   * @returns
   *   Schema.
   */
  constructor(property, normal, space) {
    this.normal = normal
    this.property = property

>>>>>>> 08f40ceb (Initial)
    if (space) {
      this.space = space
    }
  }
}

<<<<<<< HEAD
/** @type {Properties} */
Schema.prototype.property = {}
/** @type {Normal} */
Schema.prototype.normal = {}
/** @type {string|null} */
Schema.prototype.space = null
=======
Schema.prototype.normal = {}
Schema.prototype.property = {}
Schema.prototype.space = undefined
>>>>>>> 08f40ceb (Initial)
