<<<<<<< HEAD
export namespace path {
  export {basename}
  export {dirname}
  export {extname}
  export {join}
  export const sep: string
=======
export namespace minpath {
    export { basename };
    export { dirname };
    export { extname };
    export { join };
    export let sep: string;
>>>>>>> 08f40ceb (Initial)
}
/**
 * Get the basename from a path.
 *
 * @param {string} path
 *   File path.
<<<<<<< HEAD
 * @param {string | undefined} [ext]
=======
 * @param {string | null | undefined} [extname]
>>>>>>> 08f40ceb (Initial)
 *   Extension to strip.
 * @returns {string}
 *   Stem or basename.
 */
<<<<<<< HEAD
declare function basename(path: string, ext?: string | undefined): string
=======
declare function basename(path: string, extname?: string | null | undefined): string;
>>>>>>> 08f40ceb (Initial)
/**
 * Get the dirname from a path.
 *
 * @param {string} path
 *   File path.
 * @returns {string}
 *   File path.
 */
<<<<<<< HEAD
declare function dirname(path: string): string
=======
declare function dirname(path: string): string;
>>>>>>> 08f40ceb (Initial)
/**
 * Get an extname from a path.
 *
 * @param {string} path
 *   File path.
 * @returns {string}
 *   Extname.
 */
<<<<<<< HEAD
declare function extname(path: string): string
=======
declare function extname(path: string): string;
>>>>>>> 08f40ceb (Initial)
/**
 * Join segments from a path.
 *
 * @param {Array<string>} segments
 *   Path segments.
 * @returns {string}
 *   File path.
 */
<<<<<<< HEAD
declare function join(...segments: Array<string>): string
export {}
=======
declare function join(...segments: Array<string>): string;
export {};
//# sourceMappingURL=minpath.browser.d.ts.map
>>>>>>> 08f40ceb (Initial)
