/**
<<<<<<< HEAD
 * @typedef {import('../types.js').Unsafe} Unsafe
 * @typedef {import('../types.js').ConstructName} ConstructName
=======
 * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'
>>>>>>> 08f40ceb (Initial)
 */
/**
 * @param {Array<ConstructName>} stack
 * @param {Unsafe} pattern
 * @returns {boolean}
 */
<<<<<<< HEAD
export function patternInScope(
  stack: Array<ConstructName>,
  pattern: Unsafe
): boolean
export type Unsafe = import('../types.js').Unsafe
export type ConstructName = import('../types.js').ConstructName
=======
export function patternInScope(stack: Array<ConstructName>, pattern: Unsafe): boolean;
import type { ConstructName } from 'mdast-util-to-markdown';
import type { Unsafe } from 'mdast-util-to-markdown';
//# sourceMappingURL=pattern-in-scope.d.ts.map
>>>>>>> 08f40ceb (Initial)
