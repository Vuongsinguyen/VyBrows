import { printHelp } from "../../core/messages.js";
<<<<<<< HEAD
import { sync as _sync } from "../../core/sync/index.js";
import { flagsToAstroInlineConfig } from "../flags.js";
async function sync({ flags }) {
  if ((flags == null ? void 0 : flags.help) || (flags == null ? void 0 : flags.h)) {
=======
import _sync from "../../core/sync/index.js";
import { flagsToAstroInlineConfig } from "../flags.js";
async function sync({ flags }) {
  if (flags?.help || flags?.h) {
>>>>>>> 08f40ceb (Initial)
    printHelp({
      commandName: "astro sync",
      usage: "[...flags]",
      tables: {
<<<<<<< HEAD
        Flags: [["--help (-h)", "See all available flags."]]
=======
        Flags: [
          ["--force", "Clear the content layer cache, forcing a full rebuild."],
          ["--help (-h)", "See all available flags."]
        ]
>>>>>>> 08f40ceb (Initial)
      },
      description: `Generates TypeScript types for all Astro modules.`
    });
    return 0;
  }
<<<<<<< HEAD
  const inlineConfig = flagsToAstroInlineConfig(flags);
  const exitCode = await _sync(inlineConfig);
  return exitCode;
=======
  await _sync(flagsToAstroInlineConfig(flags), { telemetry: true });
>>>>>>> 08f40ceb (Initial)
}
export {
  sync
};
