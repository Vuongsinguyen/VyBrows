<<<<<<< HEAD
import { AstroError } from "../core/errors/index.js";
const virtualModuleId = "astro:transitions";
const resolvedVirtualModuleId = "\0" + virtualModuleId;
function astroTransitions({ config }) {
  return {
    name: "astro:transitions",
=======
const virtualModuleId = "astro:transitions";
const resolvedVirtualModuleId = "\0" + virtualModuleId;
const virtualClientModuleId = "astro:transitions/client";
const resolvedVirtualClientModuleId = "\0" + virtualClientModuleId;
function astroTransitions({ settings }) {
  return {
    name: "astro:transitions",
    config() {
      return {
        optimizeDeps: {
          include: ["astro > cssesc"]
        }
      };
    },
>>>>>>> 08f40ceb (Initial)
    async resolveId(id) {
      if (id === virtualModuleId) {
        return resolvedVirtualModuleId;
      }
<<<<<<< HEAD
    },
    load(id) {
      if (id === resolvedVirtualModuleId) {
        if (!config.experimental.viewTransitions) {
          throw new AstroError({
            name: "TransitionError",
            title: "Experimental View Transitions not enabled",
            message: `View Transitions support is experimental. To enable update your config to include: 
						
export default defineConfig({
	experimental: {
		viewTransitions: true
	}
})`
          });
        }
        return `
				export * from "astro/transitions";
				export { default as ViewTransitions } from "astro/components/ViewTransitions.astro";
			`;
=======
      if (id === virtualClientModuleId) {
        return resolvedVirtualClientModuleId;
      }
    },
    load(id) {
      if (id === resolvedVirtualModuleId) {
        return {
          code: `
						export * from "astro/virtual-modules/transitions.js";
						export {
							default as ViewTransitions,
							default as ClientRouter
						} from "astro/components/ClientRouter.astro";
					`
        };
      }
      if (id === resolvedVirtualClientModuleId) {
        return {
          code: `
						export { navigate, supportsViewTransitions, transitionEnabledOnThisPage } from "astro/virtual-modules/transitions-router.js";
						export * from "astro/virtual-modules/transitions-types.js";
						export {
							TRANSITION_BEFORE_PREPARATION, isTransitionBeforePreparationEvent, TransitionBeforePreparationEvent,
							TRANSITION_AFTER_PREPARATION,
							TRANSITION_BEFORE_SWAP, isTransitionBeforeSwapEvent, TransitionBeforeSwapEvent,
							TRANSITION_AFTER_SWAP, TRANSITION_PAGE_LOAD
						} from "astro/virtual-modules/transitions-events.js";
						export { swapFunctions } from "astro/virtual-modules/transitions-swap-functions.js";
					`
        };
      }
    },
    transform(code, id) {
      if (id.includes("ClientRouter.astro") && id.endsWith(".ts")) {
        const prefetchDisabled = settings.config.prefetch === false;
        return code.replace("__PREFETCH_DISABLED__", JSON.stringify(prefetchDisabled));
>>>>>>> 08f40ceb (Initial)
      }
    }
  };
}
export {
  astroTransitions as default
};
