<<<<<<< HEAD
import type { HmrContext, ModuleNode } from 'vite';
import type { AstroConfig } from '../@types/astro';
import { cachedCompilation } from '../core/compile/index.js';
import type { LogOptions } from '../core/logger/core.js';
export interface HandleHotUpdateOptions {
    config: AstroConfig;
    logging: LogOptions;
    compile: () => ReturnType<typeof cachedCompilation>;
    source: string;
}
export declare function handleHotUpdate(ctx: HmrContext, { config, logging, compile, source }: HandleHotUpdateOptions): Promise<ModuleNode[] | undefined>;
=======
import type { HmrContext } from 'vite';
import type { Logger } from '../core/logger/core.js';
import type { CompileMetadata } from './types.js';
interface HandleHotUpdateOptions {
    logger: Logger;
    astroFileToCompileMetadata: Map<string, CompileMetadata>;
}
export declare function handleHotUpdate(ctx: HmrContext, { logger, astroFileToCompileMetadata }: HandleHotUpdateOptions): Promise<import("vite").ModuleNode[] | undefined>;
export declare function isStyleOnlyChanged(oldCode: string, newCode: string): boolean;
export {};
>>>>>>> 08f40ceb (Initial)
